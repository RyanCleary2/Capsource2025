<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>CapSource AI Field Placement Generator</title>
  <%= stylesheet_link_tag 'application', media: 'all' %>
  <%= javascript_importmap_tags %>
  <style>
    :root {
      --primary-color: #e27d60;
      --primary-light: #e8a87c;
      --primary-dark: #c7654e;
      --secondary-color: #85cdca;
      --accent-color: #c38d9e;
      --text-color: #41444b;
      --light-bg: #f8f9fa;
      --white: #ffffff;
      --dark-accent: #41444b;
      --light-accent: #f2f3f4;
      --border-radius: 8px;
      --box-shadow: 0 10px 20px rgba(0, 0, 0, 0.05);
      --content-shadow: 0 6px 12px rgba(226, 125, 96, 0.1);
    }
    * { margin: 0; padding: 0; box-sizing: border-box; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; }
    body { background-color: var(--light-bg); color: var(--text-color); line-height: 1.6; }
    .container { width: 100%; max-width: 1200px; margin: 0 auto; padding: 0 20px; }
    header { background-color: var(--white); box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08); position: sticky; top: 0; z-index: 1000; }
    .header-container { display: flex; justify-content: space-between; align-items: center; padding: 15px 0; }
    .logo { display: flex; align-items: center; }
    .logo img { height: 40px; margin-right: 10px; }
    .logo h1 { color: var(--primary-color); font-size: 24px; font-weight: 600; }
    nav { display: flex; margin-left: 40px; }
    .nav-links { display: flex; list-style: none; gap: 25px; }
    .nav-links a { color: var(--text-color); text-decoration: none; font-weight: 500; transition: color 0.3s; font-size: 15px; }
    .nav-links a:hover { color: var(--primary-color); }
    .auth-buttons { display: flex; gap: 10px; }
    .btn { padding: 10px 22px; border-radius: var(--border-radius); font-weight: 500; cursor: pointer; transition: all 0.3s; text-decoration: none; text-align: center; font-size: 14px; }
    .btn-outline { border: 2px solid var(--primary-color); color: var(--primary-color); background: transparent; }
    .btn-outline:hover { background-color: var(--primary-color); color: var(--white); transform: translateY(-2px); }
    .btn-primary { background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-light) 100%); color: var(--white); border: none; box-shadow: 0 4px 8px rgba(226, 125, 96, 0.3); }
    .btn-primary:hover { box-shadow: 0 6px 12px rgba(226, 125, 96, 0.4); transform: translateY(-2px); }
    .hero { background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-light) 100%); padding: 60px 0; color: white; text-align: center; position: relative; overflow: hidden; }
    .hero::before { content: ""; position: absolute; top: 0; left: 0; width: 100%; height: 100%; background-image: radial-gradient(circle at 20% 20%, rgba(255, 255, 255, 0.1) 0%, transparent 40%), radial-gradient(circle at 80% 80%, rgba(255, 255, 255, 0.1) 0%, transparent 40%); }
    .hero-content { position: relative; z-index: 1; }
    .hero h1 { font-size: 36px; margin-bottom: 15px; font-weight: 700; }
    .hero p { font-size: 18px; max-width: 800px; margin: 0 auto; opacity: 0.9; }
    .progress-tracker { display: flex; justify-content: center; gap: 20px; margin: 30px 0 0 0; }
    .progress-step { background: var(--light-accent); color: var(--primary-dark); padding: 10px 24px; border-radius: var(--border-radius); font-weight: 600; font-size: 16px; box-shadow: var(--box-shadow); }
    .progress-step.active { background: var(--primary-color); color: var(--white); }
    .case-generator { padding: 60px 0; }
    .generator-container { background-color: var(--white); border-radius: var(--border-radius); box-shadow: var(--box-shadow); padding: 40px; margin-top: -80px; position: relative; z-index: 10; }
    .generator-heading { text-align: center; margin-bottom: 40px; }
    .generator-heading h2 { font-size: 30px; color: var(--primary-dark); margin-bottom: 10px; font-weight: 700; }
    .generator-heading p { color: #666; font-size: 16px; }
    .form-section { margin-bottom: 30px; padding-bottom: 20px; border-bottom: 1px solid rgba(0, 0, 0, 0.05); }
    .form-section:last-child { border-bottom: none; }
    .form-section h3 { font-size: 20px; margin-bottom: 20px; color: var(--primary-dark); }
    .form-grid { display: grid; grid-template-columns: 1fr 1fr; gap: 20px; align-items: start; }
    .form-group { margin-bottom: 20px; display: flex; flex-direction: column; }
    .form-group label { display: block; margin-bottom: 8px; font-weight: 500; color: var(--text-color); }
    .optional-label { color: #999; font-size: 14px; font-weight: normal; }
    .form-group input[type="text"], .form-group input[type="url"], .form-group select, .form-group textarea { width: 100%; padding: 12px; border: 1px solid #ddd; border-radius: var(--border-radius); font-size: 15px; transition: border-color 0.3s, box-shadow 0.3s; }
    .form-group input[type="text"]:focus, .form-group input[type="url"]:focus, .form-group select:focus, .form-group textarea:focus { border-color: var(--primary-color); box-shadow: 0 0 0 3px rgba(226, 125, 96, 0.1); outline: none; }
    .form-group textarea { min-height: 120px; resize: vertical; }
    .generation-mode { background-color: var(--light-accent); padding: 20px; border-radius: var(--border-radius); margin-bottom: 20px; }
    .generation-mode label { display: flex; align-items: center; font-weight: 500; margin-bottom: 10px; }
    .generation-mode input[type="checkbox"] { margin-right: 10px; width: 18px; height: 18px; }
    .generation-mode p { color: #666; font-size: 14px; margin-left: 28px; }
    .topics-checkboxes { display: grid; grid-template-columns: repeat(3, 1fr); gap: 10px; max-height: 300px; overflow-y: auto; padding: 15px; background-color: var(--light-accent); border-radius: var(--border-radius); }
    .topics-checkboxes label { display: flex; align-items: center; font-weight: normal; font-size: 14px; }
    .topics-checkboxes input[type="checkbox"] { margin-right: 8px; }
    .form-footer { margin-top: 30px; text-align: center; }
    .generate-btn { padding: 15px 40px; background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-light) 100%); color: white; border: none; border-radius: var(--border-radius); font-weight: 600; font-size: 16px; cursor: pointer; transition: all 0.3s; box-shadow: 0 4px 8px rgba(226, 125, 96, 0.3); }
    .generate-btn:hover { box-shadow: 0 6px 12px rgba(226, 125, 96, 0.4); transform: translateY(-2px); }
    .hidden { display: none !important; }
    .error-message { color: #e74c3c; font-size: 14px; margin-top: 10px; display: none; }
    @media (max-width: 768px) { .form-grid { grid-template-columns: 1fr; } .topics-checkboxes { grid-template-columns: 1fr 1fr; } .generator-container { padding: 30px 20px; } .hero { padding: 40px 0; } .hero h1 { font-size: 28px; } .hero p { font-size: 16px; } }
    @media (max-width: 576px) { .topics-checkboxes { grid-template-columns: 1fr; } }
    footer { background-color: var(--dark-accent); color: var(--white); padding: 30px 0; font-size: 14px; margin-top: 60px; }
    .footer-container { display: flex; justify-content: space-between; align-items: center; }
    .footer-links { display: flex; gap: 20px; }
    .footer-links a { color: var(--white); text-decoration: none; transition: color 0.3s; }
    .footer-links a:hover { color: var(--primary-light); }
  </style>
</head>
<body>
  <header>
    <div class="container header-container">
      <div style="display: flex; align-items: center;">
        <div class="logo">
          <%= image_tag 'logo.png', alt: 'CapSource Logo', height: '40' %>
          <h1>CapSource</h1>
        </div>
        <nav>
          <ul class="nav-links">
            <li><a href="#">EDUCATORS</a></li>
            <li><a href="#">STUDENTS</a></li>
            <li><a href="#">ORGANIZATIONS</a></li>
            <li><a href="#">OPPORTUNITIES</a></li>
            <li><a href="#">LEARN MORE</a></li>
          </ul>
        </nav>
      </div>
      <div class="auth-buttons">
        <a href="#" class="btn btn-outline">LOGIN</a>
        <a href="#" class="btn btn-primary">REGISTER</a>
      </div>
    </div>
  </header>

  <section class="hero">
    <div class="container hero-content">
  <h1>AI-Powered Field Placement Generator</h1>
  <p>Create industry-relevant field placements for students with AI assistance. Choose to generate a full placement scope or explore placement ideas based on topics.</p>
      <div class="progress-tracker">
        <div class="progress-step active">1. Enter Details</div>
        <div class="progress-step">2. Generate Results</div>
        <div class="progress-step">3. Implement</div>
      </div>
    </div>
  </section>

  <section id="generator" class="placement-generator">
    <div class="container">
      <div class="generator-container">
        <div class="generator-heading">
          <h2>Field Placement Generator</h2>
          <p>Fill in the details below to create a customized field placement or explore placement ideas with AI assistance</p>
        </div>

  <%= form_with url: generate_field_placement_path, local: true, id: 'field-placement-form' do |f| %>
          <% if flash.now[:alert] %>
            <div style="color: #e74c3c; background-color: #f9eae9; padding: 15px; border-radius: var(--border-radius); margin-bottom: 20px;">
              <%= flash.now[:alert] %>
            </div>
          <% end %>

          <div class="form-section">
            <h3>Field Placement Inputs</h3>
            <div class="form-group">
              <%= f.label :background, 'Field Placement Objective Statement' %>
              <%= f.text_area :background, placeholder: 'Describe the purpose and learning goals for this field placement (what should students accomplish?)', required: true %>
            </div>

            <div class="form-group">
              <%= f.label :discipline, 'Discipline' %>
              <%# Build discipline options from CSV mapping so values match headers exactly %>
              <% discipline_options = [['Select a discipline', '']] + discipline_topics_mapping.keys.map { |k| [k, k] } %>
              <% if discipline_options.length <= 1 %>
                <div style="color: #c0392b; font-weight: 600;">No disciplines loaded from CSV (check Field_Placements/config/discipline_topics.csv)</div>
              <% end %>
              <%= f.select :discipline, discipline_options, { selected: '' }, { id: 'discipline-select', required: true } %>
            </div>
          </div>

          <div class="form-section" id="topics-group">
            <h3>Field Placement Topics</h3>
            <div class="form-group">
              <%= f.label :topics, 'Select Topics' %> <span class="optional-label">(select at least one)</span>
              <div style="display:flex; gap:12px; align-items:center; margin-bottom:10px;">
                <button type="button" id="select-all-topics" class="btn btn-outline">Select All</button>
                <button type="button" id="clear-topics" class="btn">Clear</button>
                <div style="margin-left:8px; color:#666; font-size:14px;">Topics shown below are filtered by discipline selection.</div>
              </div>

              <div class="topics-checkboxes" id="topics-container">
                <!-- Topics for the selected discipline will be injected here -->
              </div>
              <div class="error-message" id="topics-error">Please select at least one topic for field placement ideas</div>
            </div>
          </div>

          <div class="form-footer">
            <%= f.submit 'Generate Field Placement', class: 'generate-btn', id: 'generate-btn' %>
          </div>
        <% end %>
      </div>
    </div>
  </section>

  <footer>
    <div class="container footer-container">
      <div>© 2025 CapSource. All rights reserved.</div>
      <div class="footer-links">
        <a href="#">Privacy Policy</a>
        <a href="#">Terms of Service</a>
        <a href="#">Contact Us</a>
      </div>
    </div>
  </footer>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const generateButton = document.getElementById('generate-btn');
      const form = document.getElementById('field-placement-form');
      const topicsError = document.getElementById('topics-error');
      const disciplineSelect = document.getElementById('discipline-select');
      const topicsContainer = document.getElementById('topics-container');
      const selectAllBtn = document.getElementById('select-all-topics');
      const clearBtn = document.getElementById('clear-topics');

      if (!generateButton || !form || !topicsError || !disciplineSelect || !topicsContainer) {
        console.error('One or more DOM elements not found.');
        return;
      }

  // Load discipline->topics mapping from CSV via helper-embedded JSON
  const disciplineTopics = <%= discipline_topics_json %> || {};
  // Debug: show mapping keys in console to help troubleshoot mismatches
  console.debug('disciplineTopics keys:', Object.keys(disciplineTopics));

      function slugify(text) {
        return text.toString().toLowerCase().trim().replace(/[^a-z0-9]+/g, '-').replace(/(^-|-$)/g, '');
      }

      function populateTopicsForDiscipline(discipline) {
            // try direct match first, then try slug-match of keys to tolerate small label differences
            let topics = disciplineTopics[discipline] || [];
            if ((!topics || topics.length === 0) && discipline) {
              const targetSlug = slugify(discipline);
              const foundKey = Object.keys(disciplineTopics).find(k => slugify(k) === targetSlug);
              if (foundKey) topics = disciplineTopics[foundKey] || [];
            }
        topicsContainer.innerHTML = ''; // clear
        if (topics.length === 0) {
          topicsContainer.innerHTML = '<div style="color:#666;">No predefined topics for this discipline. You can still enter a background objective and generate a scope, or pick topics from "Other".</div>';
          return;
        }
        topics.forEach(topic => {
          const value = slugify(topic);
          const label = document.createElement('label');
          const input = document.createElement('input');
          input.type = 'checkbox';
          input.name = 'topics[]';
          input.value = value;
          input.style.marginRight = '8px';
          label.appendChild(input);
          label.appendChild(document.createTextNode(' ' + topic));
          topicsContainer.appendChild(label);
        });
      }

      // Initialize: if a discipline is pre-selected, populate topics
      if (disciplineSelect.value) populateTopicsForDiscipline(disciplineSelect.value);

      disciplineSelect.addEventListener('change', function() {
        populateTopicsForDiscipline(this.value);
      });

      selectAllBtn && selectAllBtn.addEventListener('click', function() {
        topicsContainer.querySelectorAll('input[type="checkbox"]').forEach(cb => cb.checked = true);
      });
      clearBtn && clearBtn.addEventListener('click', function() {
        topicsContainer.querySelectorAll('input[type="checkbox"]').forEach(cb => cb.checked = false);
      });

      // Validate that at least one topic is selected before submitting
      form.addEventListener('submit', function(event) {
        const selectedTopics = document.querySelectorAll('input[name="topics[]"]:checked');
        if (selectedTopics.length === 0) {
          event.preventDefault();
          topicsError.style.display = 'block';
          document.getElementById('topics-group').scrollIntoView({ behavior: 'smooth' });
        } else {
          topicsError.style.display = 'none';
        }
      });
    });
  </script>
</body>
</html>